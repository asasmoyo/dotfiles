local BASE_PGDATA=${HOME}/.pgdata
local PGDATA_96="${BASE_PGDATA}/9.6"
local PGDATA_11="${BASE_PGDATA}/11"
local PGCTL_96="<%= `echo $(brew --prefix postgresql@9.6)`.strip %>/bin/pg_ctl"
local PGCTL_11="<%= `echo $(brew --prefix postgresql@11)`.strip %>/bin/pg_ctl"
local PSQL="<%= `echo $(brew --prefix postgresql@11)`.strip %>/bin/psql"

function _pg96_init {
    local initdb_bin="<%= `echo $(brew --prefix postgresql@9.6)`.strip %>/bin/initdb"
    ${initdb_bin} -D ${PGDATA_96} -U postgres

    local more_conf="${BASE_PGDATA}/conf.d"
    mkdir -p ${more_conf}

    cat << EOF > "${more_conf}/me.conf"
listen_addresses = '127.0.0.1'
log_line_prefix = '%m [%p] '
log_statement = 'all'
log_connections = true
log_disconnections = true
EOF

    local conf="${PGDATA_96}/postgresql.conf"
    local line="include_dir = '${more_conf}'"
    grep -q "^${line}" "${conf}" || echo $line >> $conf

    ${PGCTL_96} -D ${PGDATA_96} -l "${PGDATA_96}/logfile" start
    psql -U postgres -c "create role ${USER} with login superuser"
    psql -U postgres -c "create database ${USER} with owner ${USER}"
}

function pg96 {
    local cmd=$1
    case $cmd in
        init)
            _pg96_init
            ;;
        start)
            ${PGCTL_96} -D ${PGDATA_96} -l "${PGDATA_96}/logfile" start
            ;;
        stop)
            ${PGCTL_96} -D ${PGDATA_96} stop
            ps ax | grep "${PGDATA_96}" | grep -v 'grep'
            ;;
        drop)
            local out=$(ps ax | grep "${PGDATA_96}" | grep -v 'grep')
            if [ "$out" != "" ]; then
                echo "There's running postgres instance"
                return 1
            fi

            rm -rf ${PGDATA_96}
            ;;
        status)
            ${PGCTL_96} -D ${PGDATA_96} status
            ps ax | grep "${PGDATA_96}" | grep -v 'grep'
            ;;
        log)
            tail -f "${PGDATA_96}/logfile"
            ;;
        *)
            echo "Usage: $0 {init|start|stop|drop|status|log}"
            return 1
    esac
}

function _pg11_init {
    local initdb_bin="<%= `echo $(brew --prefix postgresql@11)`.strip %>/bin/initdb"
    ${initdb_bin} -D ${PGDATA_11} -U postgres

    local more_conf="${BASE_PGDATA}/conf.d"
    mkdir -p ${more_conf}

    cat << EOF > "${more_conf}/me.conf"
listen_addresses = '127.0.0.1'
log_line_prefix = '%m [%p] '
log_statement = 'all'
log_connections = true
log_disconnections = true
EOF

    local conf="${PGDATA_11}/postgresql.conf"
    local line="include_dir = '${more_conf}'"
    grep -q "^${line}" "${conf}" || echo $line >> $conf

    ${PGCTL_11} -D ${PGDATA_11} -l "${PGDATA_11}/logfile" start
    psql -U postgres -c "create role ${USER} with login superuser"
    psql -U postgres -c "create database ${USER} with owner ${USER}"
}

function pg11 {
    local cmd=$1
    case $cmd in
        init)
            _pg11_init
            ;;
        start)
            ${PGCTL_11} -D ${PGDATA_11} -l "${PGDATA_11}/logfile" start
            ;;
        stop)
            ${PGCTL_11} -D ${PGDATA_11} stop
            ps ax | grep "${PGDATA_11}" | grep -v 'grep'
            ;;
        drop)
            local out=$(ps ax | grep "${PGDATA_11}" | grep -v 'grep')
            if [ "$out" != "" ]; then
                echo "There's running postgres instance"
                return 1
            fi

            rm -rf ${PGDATA_11}
            ;;
        status)
            ${PGCTL_11} -D ${PGDATA_11} status
            ps ax | grep "${PGDATA_11}" | grep -v 'grep'
            ;;
        log)
            tail -f "${PGDATA_11}/logfile"
            ;;
        *)
            echo "Usage: $0 {init|start|stop|drop|status|log}"
            return 1
    esac
}
